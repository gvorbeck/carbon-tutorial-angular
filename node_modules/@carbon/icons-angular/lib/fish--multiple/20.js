import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var FishMultiple20 = /** @class */ (function () {
    function FishMultiple20() {
        this.focusable = false;
    }
    FishMultiple20.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-fish-multiple20",
                    template: "\n    <svg\n      ibmIconFishMultiple20\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    FishMultiple20.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return FishMultiple20;
}());
export { FishMultiple20 };
var FishMultiple20Directive = /** @class */ (function () {
    function FishMultiple20Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    FishMultiple20Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30,14a12.9845,12.9845,0,0,0-3.8286-9.2427L24.4143,3,23,4.4138l1.7573,1.7574a11.0713,11.0713,0,0,1,0,15.6572L22,24.5857,23.4143,26l2.7571-2.7573A12.9845,12.9845,0,0,0,30,14Z\"></path><circle cx=\"17\" cy=\"11\" r=\"1\"></circle><path d=\"M22,14a12.9845,12.9845,0,0,0-3.8286-9.2427L16.4143,3,15,4.4138l1.7573,1.7574a11.0713,11.0713,0,0,1,0,15.6572L14,24.5857,15.4143,26l2.7571-2.7573A12.9845,12.9845,0,0,0,22,14Z\"></path><circle cx=\"25\" cy=\"11\" r=\"1\"></circle><circle cx=\"9\" cy=\"11\" r=\"1\"></circle><path d=\"M9.4141,24l.7573-.7573a13.0708,13.0708,0,0,0,0-18.4854L8,2.5857,5.8286,4.7571a13.0708,13.0708,0,0,0,0,18.4854L6.5859,24,2.293,28.2928A1,1,0,0,0,3,30H13a1,1,0,0,0,.707-1.707ZM4,14A10.9988,10.9988,0,0,1,7.2427,6.1712L8,5.4138l.7573.7574a11.0713,11.0713,0,0,1,0,15.6572L8,22.5857l-.7573-.7573A10.9988,10.9988,0,0,1,4,14ZM5.4141,28,8,25.4138,10.5859,28Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 20,
            height: 20,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            FishMultiple20Directive.titleIdCounter++;
            title.setAttribute("id", "fish-multiple20-" + FishMultiple20Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "fish-multiple20-" + FishMultiple20Directive.titleIdCounter);
        }
    };
    FishMultiple20Directive.titleIdCounter = 0;
    FishMultiple20Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconFishMultiple20]"
                },] },
    ];
    /** @nocollapse */
    FishMultiple20Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    FishMultiple20Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return FishMultiple20Directive;
}());
export { FishMultiple20Directive };
var FishMultiple20Module = /** @class */ (function () {
    function FishMultiple20Module() {
    }
    FishMultiple20Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        FishMultiple20,
                        FishMultiple20Directive
                    ],
                    exports: [
                        FishMultiple20,
                        FishMultiple20Directive
                    ]
                },] },
    ];
    return FishMultiple20Module;
}());
export { FishMultiple20Module };
//# sourceMappingURL=20.js.map
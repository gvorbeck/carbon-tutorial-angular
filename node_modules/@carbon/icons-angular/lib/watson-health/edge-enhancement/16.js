import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var WatsonHealthEdgeEnhancement16 = /** @class */ (function () {
    function WatsonHealthEdgeEnhancement16() {
        this.focusable = false;
    }
    WatsonHealthEdgeEnhancement16.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-watson-health-edge-enhancement16",
                    template: "\n    <svg\n      ibmIconWatsonHealthEdgeEnhancement16\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    WatsonHealthEdgeEnhancement16.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return WatsonHealthEdgeEnhancement16;
}());
export { WatsonHealthEdgeEnhancement16 };
var WatsonHealthEdgeEnhancement16Directive = /** @class */ (function () {
    function WatsonHealthEdgeEnhancement16Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    WatsonHealthEdgeEnhancement16Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M11.8164 4.7646L11.1328 2.887A13.976 13.976 0 0 0 6.9507 5.3278L8.2358 6.8593A11.9729 11.9729 0 0 1 11.8164 4.7646zM5.5913 10L3.86 9a14.14 14.14 0 0 0-1.6382 4.5872l1.9677.3469A12.1519 12.1519 0 0 1 5.5913 10zM16 26A10 10 0 0 0 16 6h0z\"></path><path d=\"M30,16A14,14,0,0,0,16,2V4a11.9933,11.9933,0,0,1,4.0493,23.2847c-.1682.06-.334.1294-.5044.1821-.2512.0771-.51.1362-.7683.1973-.1262.03-.25.0693-.3772.0952-.2908.0591-.5884.0976-.8862.1352-.1.0122-.1983.0342-.2988.044A12.0015,12.0015,0,0,1,5.416,21.6548c-.0664-.127-.133-.2534-.1953-.3843-.0547-.1123-.106-.227-.1572-.3413A13.1207,13.1207,0,0,1,4.19,18l-1.9677.4131A13.9173,13.9173,0,0,0,2.7,20.2993l-.0251.0083A13.9615,13.9615,0,0,0,16,30q.7134,0,1.415-.0713c.135-.0137.2654-.042.3995-.06.3286-.0424.6574-.0839.9814-.1494.18-.0366.3533-.0908.5308-.1338.2685-.0659.5383-.125.8027-.2065.2463-.0762.4831-.1724.7234-.2612.18-.0664.3635-.1211.5412-.1953l-.0009-.0025A14.0015,14.0015,0,0,0,30,16Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 16,
            height: 16,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthEdgeEnhancement16Directive.titleIdCounter++;
            title.setAttribute("id", "watson-health-edge-enhancement16-" + WatsonHealthEdgeEnhancement16Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-edge-enhancement16-" + WatsonHealthEdgeEnhancement16Directive.titleIdCounter);
        }
    };
    WatsonHealthEdgeEnhancement16Directive.titleIdCounter = 0;
    WatsonHealthEdgeEnhancement16Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconWatsonHealthEdgeEnhancement16]"
                },] },
    ];
    /** @nocollapse */
    WatsonHealthEdgeEnhancement16Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    WatsonHealthEdgeEnhancement16Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return WatsonHealthEdgeEnhancement16Directive;
}());
export { WatsonHealthEdgeEnhancement16Directive };
var WatsonHealthEdgeEnhancement16Module = /** @class */ (function () {
    function WatsonHealthEdgeEnhancement16Module() {
    }
    WatsonHealthEdgeEnhancement16Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        WatsonHealthEdgeEnhancement16,
                        WatsonHealthEdgeEnhancement16Directive
                    ],
                    exports: [
                        WatsonHealthEdgeEnhancement16,
                        WatsonHealthEdgeEnhancement16Directive
                    ]
                },] },
    ];
    return WatsonHealthEdgeEnhancement16Module;
}());
export { WatsonHealthEdgeEnhancement16Module };
//# sourceMappingURL=16.js.map
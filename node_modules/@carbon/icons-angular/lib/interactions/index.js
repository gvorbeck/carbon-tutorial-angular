import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var InteractionsComponent = /** @class */ (function () {
    function InteractionsComponent() {
        this.focusable = false;
    }
    InteractionsComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-interactions",
                    template: "\n    <svg\n      ibmIconInteractions\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    InteractionsComponent.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }],
        size: [{ type: Input }]
    };
    return InteractionsComponent;
}());
export { InteractionsComponent };
var InteractionsDirective = /** @class */ (function () {
    function InteractionsDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "16": {
                metadata: { "filename": "interactions.svg", "basename": "interactions", "size": 16, "prefix": ["16"], "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 16 16", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "fill-rule": "evenodd", "d": "M11,7 L11,9 L13,9 C13.5522847,9 14,9.44771525 14,10 L14,10 L14,13 C14,13.5522847 13.5522847,14 13,14 L13,14 L10,14 L10,7 L11,7 Z M5,9 C5.55228475,9 6,9.44771525 6,10 L6,10 L6,14 L3,14 C2.44771525,14 2,13.5522847 2,13 L2,13 L2,12 C2,11.4477153 2.44771525,11 3,11 L3,11 L5,11 L5,10 L2.5,10 L2.5,9 Z M13,10 L11,10 L11,13 L13,13 L13,10 Z M5,12 L3,12 L3,13 L5,13 L5,12 Z M7.912,2 L7.834,3.911 L9.628,3.248 L9.914,4.119 L8.068,4.626 L9.251,6.134 L8.523,6.667 L7.457,5.068 L6.391,6.667 L5.663,6.134 L6.846,4.626 L5,4.119 L5.286,3.248 L7.08,3.911 L7.002,2 L7.912,2 Z" } }], "name": "interactions", "size": 16 }, "moduleName": "Interactions16", "outputOptions": { "file": "ts/interactions/16.ts" }, "namespace": "interactions" },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M11,7 L11,9 L13,9 C13.5522847,9 14,9.44771525 14,10 L14,10 L14,13 C14,13.5522847 13.5522847,14 13,14 L13,14 L10,14 L10,7 L11,7 Z M5,9 C5.55228475,9 6,9.44771525 6,10 L6,10 L6,14 L3,14 C2.44771525,14 2,13.5522847 2,13 L2,13 L2,12 C2,11.4477153 2.44771525,11 3,11 L3,11 L5,11 L5,10 L2.5,10 L2.5,9 Z M13,10 L11,10 L11,13 L13,13 L13,10 Z M5,12 L3,12 L3,13 L5,13 L5,12 Z M7.912,2 L7.834,3.911 L9.628,3.248 L9.914,4.119 L8.068,4.626 L9.251,6.134 L8.523,6.667 L7.457,5.068 L6.391,6.667 L5.663,6.134 L6.846,4.626 L5,4.119 L5.286,3.248 L7.08,3.911 L7.002,2 L7.912,2 Z\"></path></svg>"
            },
        };
    }
    InteractionsDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            InteractionsDirective.titleIdCounter++;
            title.setAttribute("id", "interactions-" + InteractionsDirective.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "interactions-" + InteractionsDirective.titleIdCounter);
        }
    };
    InteractionsDirective.titleIdCounter = 0;
    InteractionsDirective.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconInteractions]"
                },] },
    ];
    /** @nocollapse */
    InteractionsDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    InteractionsDirective.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }],
        size: [{ type: Input }]
    };
    return InteractionsDirective;
}());
export { InteractionsDirective };
var InteractionsModule = /** @class */ (function () {
    function InteractionsModule() {
    }
    InteractionsModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        InteractionsComponent,
                        InteractionsDirective,
                    ],
                    exports: [
                        InteractionsComponent,
                        InteractionsDirective,
                    ]
                },] },
    ];
    return InteractionsModule;
}());
export { InteractionsModule };
//# sourceMappingURL=index.js.map
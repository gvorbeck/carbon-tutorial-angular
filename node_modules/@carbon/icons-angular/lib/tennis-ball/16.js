import { NgModule, Component, Directive, ElementRef, Input } from "@angular/core";
import { getAttributes } from "@carbon/icon-helpers";
var TennisBall16 = /** @class */ (function () {
    function TennisBall16() {
        this.focusable = false;
    }
    TennisBall16.decorators = [
        { type: Component, args: [{
                    selector: "ibm-icon-tennis-ball16",
                    template: "\n    <svg\n      ibmIconTennisBall16\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
                },] },
    ];
    TennisBall16.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        focusable: [{ type: Input }],
        innerClass: [{ type: Input }]
    };
    return TennisBall16;
}());
export { TennisBall16 };
var TennisBall16Directive = /** @class */ (function () {
    function TennisBall16Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
    }
    TennisBall16Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var domParser = new DOMParser();
        var rawSVG = "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19,4a8.9812,8.9812,0,0,0-8.1687,12.7549L2,25.5859,3.4141,27l8.4873-8.4873a9.0408,9.0408,0,0,0,1.5859,1.5859L10,23.5859,11.4141,25l3.8313-3.8311A8.9959,8.9959,0,1,0,19,4Zm6.9058,7.9058a7.005,7.005,0,0,1-5.8116-5.8116A7.005,7.005,0,0,1,25.9058,11.9058ZM12.0942,14.0942a7.005,7.005,0,0,1,5.8116,5.8116A7.005,7.005,0,0,1,12.0942,14.0942ZM19.93,19.9307a9.01,9.01,0,0,0-7.8611-7.8614,7.004,7.004,0,0,1,6-6,9.01,9.01,0,0,0,7.8611,7.8614A7.004,7.004,0,0,1,19.93,19.9307Z\"></path></svg>";
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: 16,
            height: 16,
            viewBox: "0 0 32 32",
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            TennisBall16Directive.titleIdCounter++;
            title.setAttribute("id", "tennis-ball16-" + TennisBall16Directive.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "tennis-ball16-" + TennisBall16Directive.titleIdCounter);
        }
    };
    TennisBall16Directive.titleIdCounter = 0;
    TennisBall16Directive.decorators = [
        { type: Directive, args: [{
                    selector: "[ibmIconTennisBall16]"
                },] },
    ];
    /** @nocollapse */
    TennisBall16Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    TennisBall16Directive.propDecorators = {
        ariaLabel: [{ type: Input }],
        ariaLabelledby: [{ type: Input }],
        ariaHidden: [{ type: Input }],
        title: [{ type: Input }],
        isFocusable: [{ type: Input }]
    };
    return TennisBall16Directive;
}());
export { TennisBall16Directive };
var TennisBall16Module = /** @class */ (function () {
    function TennisBall16Module() {
    }
    TennisBall16Module.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        TennisBall16,
                        TennisBall16Directive
                    ],
                    exports: [
                        TennisBall16,
                        TennisBall16Directive
                    ]
                },] },
    ];
    return TennisBall16Module;
}());
export { TennisBall16Module };
//# sourceMappingURL=16.js.map
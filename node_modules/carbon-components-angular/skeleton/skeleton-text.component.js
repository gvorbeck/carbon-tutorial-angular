/**
 *
 * carbon-angular v0.0.0 | skeleton-text.component.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, Input } from "@angular/core";
var SkeletonText = /** @class */ (function () {
    function SkeletonText() {
        this.lines = 5;
        this.minLineWidth = 100;
        this.maxLineWidth = 300;
    }
    /**
     * Returns a random width in pixels based off a min width, and a max width.
     */
    SkeletonText.prototype.getRandomInt = function (min, max) {
        return "" + (Math.floor(Math.random() * (max - min + 1) + min) + "px");
    };
    SkeletonText.prototype.ngOnChanges = function () {
        var _this = this;
        // Creates an array of length defined by input lines with content from
        // 0 to lines - 1, maps each value to a random width in pixels.
        this.lineWidths =
            Array.from(Array(this.lines).keys())
                .map(function (num) { return _this.getRandomInt(_this.minLineWidth, _this.maxLineWidth); });
    };
    SkeletonText.decorators = [
        { type: Component, args: [{
                    selector: "ibm-skeleton-text",
                    template: "\n\t\t<p\n\t\t\t*ngFor=\"let width of lineWidths\"\n\t\t\tclass=\"bx--skeleton__text\"\n\t\t\t[style.width]=\"width\">\n\t\t</p>\n\t"
                },] },
    ];
    SkeletonText.propDecorators = {
        lines: [{ type: Input }],
        minLineWidth: [{ type: Input }],
        maxLineWidth: [{ type: Input }]
    };
    return SkeletonText;
}());
export { SkeletonText };
//# sourceMappingURL=skeleton-text.component.js.map
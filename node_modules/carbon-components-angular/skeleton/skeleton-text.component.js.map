{"version":3,"file":"skeleton-text.component.js","sourceRoot":"","sources":["../src/skeleton/skeleton-text.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAa,MAAM,eAAe,CAAC;AAE5D;IAAA;QAWU,UAAK,GAAG,CAAC,CAAC;QAEV,iBAAY,GAAG,GAAG,CAAC;QAEnB,iBAAY,GAAG,GAAG,CAAC;IAkB7B,CAAC;IAdA;;OAEG;IACH,mCAAY,GAAZ,UAAa,GAAG,EAAE,GAAG;QACpB,OAAO,MAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAE,CAAC;IACtE,CAAC;IAED,kCAAW,GAAX;QAAA,iBAMC;QALA,sEAAsE;QACtE,+DAA+D;QAC/D,IAAI,CAAC,UAAU;YACd,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;iBAClC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,YAAY,CAAC,EAAvD,CAAuD,CAAC,CAAC;IACxE,CAAC;;gBAhCD,SAAS,SAAC;oBACV,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,sIAMT;iBACD;;;wBAEC,KAAK;+BAEL,KAAK;+BAEL,KAAK;;IAkBP,mBAAC;CAAA,AAjCD,IAiCC;SAvBY,YAAY","sourcesContent":["import { Component, Input, OnChanges } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-skeleton-text\",\n\ttemplate: `\n\t\t<p\n\t\t\t*ngFor=\"let width of lineWidths\"\n\t\t\tclass=\"bx--skeleton__text\"\n\t\t\t[style.width]=\"width\">\n\t\t</p>\n\t`\n})\nexport class SkeletonText implements OnChanges {\n\t@Input() lines = 5;\n\n\t@Input() minLineWidth = 100;\n\n\t@Input() maxLineWidth = 300;\n\n\tlineWidths: Array<string>;\n\n\t/**\n\t * Returns a random width in pixels based off a min width, and a max width.\n\t */\n\tgetRandomInt(min, max) {\n\t\treturn `${Math.floor(Math.random() * (max - min + 1) + min) + \"px\"}`;\n\t}\n\n\tngOnChanges() {\n\t\t// Creates an array of length defined by input lines with content from\n\t\t// 0 to lines - 1, maps each value to a random width in pixels.\n\t\tthis.lineWidths =\n\t\t\tArray.from(Array(this.lines).keys())\n\t\t\t\t.map(num => this.getRandomInt(this.minLineWidth, this.maxLineWidth));\n\t}\n}\n"]}
/**
 *
 * carbon-angular v0.0.0 | document.service.js
 *
 * Copyright 2014, 2020 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Injectable } from "@angular/core";
import { Observable, Subscription } from "rxjs";
import { getEventObservable } from "./event.service";
import * as i0 from "@angular/core";
var DocumentService = /** @class */ (function () {
    function DocumentService() {
        this.globalEvents = new Map();
        this.documentRef = document;
        this.subscriptions = new Subscription();
    }
    DocumentService.prototype.handleEvent = function (eventType, callback) {
        if (!this.globalEvents.has(eventType)) {
            if (this.documentRef) {
                this.globalEvents.set(eventType, getEventObservable(this.documentRef, eventType));
            }
            else {
                this.globalEvents.set(eventType, new Observable());
            }
        }
        var observable = this.globalEvents.get(eventType);
        this.subscriptions.add(observable.subscribe(callback));
    };
    DocumentService.prototype.handleClick = function (callback) {
        this.handleEvent("click", callback);
    };
    DocumentService.prototype.ngOnDestroy = function () {
        this.subscriptions.unsubscribe();
        this.globalEvents = null;
    };
    DocumentService.decorators = [
        { type: Injectable, args: [{
                    providedIn: "root"
                },] },
    ];
    DocumentService.ngInjectableDef = i0.defineInjectable({ factory: function DocumentService_Factory() { return new DocumentService(); }, token: DocumentService, providedIn: "root" });
    return DocumentService;
}());
export { DocumentService };
//# sourceMappingURL=document.service.js.map
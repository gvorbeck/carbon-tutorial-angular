{"version":3,"file":"tab-header.component.js","sourceRoot":"","sources":["../src/tabs/tab-header.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,KAAK,EACL,SAAS,EACT,UAAU,EACV,MAAM,EACN,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAC;AACtC,OAAO,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AAE7C;IAAA;QA0BC;;;WAGG;QACM,WAAM,GAAG,KAAK,CAAC;QACxB;;WAEG;QACM,aAAQ,GAAG,KAAK,CAAC;QAqB1B;;WAEG;QAEO,aAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;QAInC,iBAAY,GAAG,KAAK,CAAC;IAYhC,CAAC;IAjCA,sBAAa,kCAAW;aASxB;YACC,OAAO,IAAI,CAAC,YAAY,CAAC;QAC1B,CAAC;QAdD;;WAEG;aACH,UAAyB,WAAoB;YAC5C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAEhC,2FAA2F;YAC3F,IAAI,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;aAClD;QACF,CAAC;;;OAAA;IAgBD,6BAAS,GAAT;QACC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,CAAC,aAAa,EAAE;gBACvB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;aACjC;SACD;IACF,CAAC;;gBA1ED,SAAS,SAAC;oBACV,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,+hBAoBT;iBACD;;;yBAOC,KAAK;2BAIL,KAAK;gCAIL,KAAK;8BAIL,KAAK;2BAiBL,MAAM;0BAEN,SAAS,SAAC,SAAS;;IAcrB,gBAAC;CAAA,AA3ED,IA2EC;SAlDY,SAAS","sourcesContent":["import {\n\tComponent,\n\tInput,\n\tViewChild,\n\tElementRef,\n\tOutput\n} from \"@angular/core\";\n\nimport { Tab } from \"./tab.component\";\nimport { EventEmitter } from \"@angular/core\";\n\n@Component({\n\tselector: \"ibm-tab-header\",\n\ttemplate: `\n\t\t<li\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--tabs__nav-item--selected': active,\n\t\t\t\t'bx--tabs__nav-item--disabled': disabled\n\t\t\t}\"\n\t\t\tclass=\"bx--tabs__nav-item\"\n\t\t\trole=\"presentation\"\n\t\t\t(click)=\"selectTab()\">\n\t\t\t<a\n\t\t\t\t#tabItem\n\t\t\t\t[attr.aria-selected]=\"active\"\n\t\t\t\tdraggable=\"false\"\n\t\t\t\tclass=\"bx--tabs__nav-link\"\n\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t[attr.tabindex]=\"(active? 0 : -1)\"\n\t\t\t\trole=\"tab\">\n\t\t\t\t<ng-content></ng-content>\n\t\t\t</a>\n\t\t</li>\n\t`\n})\n\nexport class TabHeader {\n\t/**\n\t * Indicates whether the `Tab` is active/selected.\n\t * Determines whether it's `TabPanel` is rendered.\n\t */\n\t@Input() active = false;\n\t/**\n\t * Indicates whether or not the `Tab` item is disabled.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Reference to the corresponsing tab pane.\n\t */\n\t@Input() paneReference: Tab;\n\t/**\n\t * Set to 'true' to have pane reference cached and not reloaded on tab switching.\n\t */\n\t@Input() set cacheActive(shouldCache: boolean) {\n\t\tthis._cacheActive = shouldCache;\n\n\t\t// Updates the pane references associated with the tab header when cache active is changed.\n\t\tif (this.paneReference) {\n\t\t\tthis.paneReference.cacheActive = this.cacheActive;\n\t\t}\n\t}\n\n\tget cacheActive() {\n\t\treturn this._cacheActive;\n\t}\n\n\t/**\n\t * Value 'selected' to be emitted after a new `Tab` is selected.\n\t */\n\n\t@Output() selected = new EventEmitter<any>();\n\n\t@ViewChild(\"tabItem\") tabItem: ElementRef;\n\n\tprotected _cacheActive = false;\n\n\tselectTab() {\n\t\tthis.tabItem.nativeElement.focus();\n\t\tif (!this.disabled) {\n\t\t\tthis.selected.emit();\n\t\t\tthis.active = true;\n\t\t\tif (this.paneReference) {\n\t\t\t\tthis.paneReference.active = true;\n\t\t\t}\n\t\t}\n\t}\n}\n"]}
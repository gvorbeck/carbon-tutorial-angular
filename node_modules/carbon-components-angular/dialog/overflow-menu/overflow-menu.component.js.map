{"version":3,"file":"overflow-menu.component.js","sourceRoot":"","sources":["../../src/dialog/overflow-menu/overflow-menu.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACN,SAAS,EACT,UAAU,EACV,KAAK,EACL,iBAAiB,EACjB,YAAY,EACZ,WAAW,EACX,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAElE;;;;;;;;;;;;;;GAcG;AACH;IAoEC,sBAAsB,UAAsB,EAAY,IAAU;QAA5C,eAAU,GAAV,UAAU,CAAY;QAAY,SAAI,GAAJ,IAAI,CAAM;QAtBzD,gBAAW,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC;QAErD,SAAI,GAAG,KAAK,CAAC;QAEb,cAAS,GAAqB,QAAQ,CAAC;QAOvC,iBAAY,GAAG,EAAE,CAAC;QAS3B,SAAI,GAAG,KAAK,CAAC;IAEwD,CAAC;;gBApEtE,SAAS,SAAC;oBACV,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,2xBAuBT;oBACD,MAAM,EAAE,CAAC,iZAgBR,CAAC;oBACF,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACrC;;;;gBApEA,UAAU;gBAMF,IAAI;;;8BAgEX,KAAK;uBAEL,KAAK;4BAEL,KAAK;yBAKL,KAAK;+BAEL,KAAK;gCAKL,KAAK;wCAEL,YAAY,SAAC,qBAAqB;;IAKpC,mBAAC;CAAA,AArED,IAqEC;SAxBY,YAAY","sourcesContent":["import {\n\tComponent,\n\tElementRef,\n\tInput,\n\tViewEncapsulation,\n\tContentChild,\n\tTemplateRef\n} from \"@angular/core\";\nimport { I18n } from \"./../../i18n/i18n.module\";\nimport { OverflowMenuDirective } from \"./overflow-menu.directive\";\n\n/**\n * The OverFlow menu component encapsulates the OverFlowMenu directive, and the menu iconography into one convienent component\n *\n * [See demo](../../?path=/story/overflow-menu--basic)\n *\n * html:\n * ```\n * <ibm-overflow-menu>\n *\t<ibm-overflow-menu-option>Option 1</ibm-overflow-menu-option>\n *\t<ibm-overflow-menu-option>Option 2</ibm-overflow-menu-option>\n * </ibm-overflow-menu>\n * ```\n *\n * <example-url>../../iframe.html?id=overflow-menu--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-overflow-menu\",\n\ttemplate: `\n\t\t<div\n\t\t\t[ibmOverflowMenu]=\"options\"\n\t\t\t[ngClass]=\"{'bx--overflow-menu--open': open}\"\n\t\t\t[attr.aria-label]=\"buttonLabel\"\n\t\t\t[flip]=\"flip\"\n\t\t\t[offset]=\"offset\"\n\t\t\t[wrapperClass]=\"wrapperClass\"\n\t\t\t(onOpen)=\"open = true\"\n\t\t\t(onClose)=\"open = false\"\n\t\t\trole=\"button\"\n\t\t\taria-haspopup=\"true\"\n\t\t\tclass=\"bx--overflow-menu\"\n\t\t\t[placement]=\"placement\"\n\t\t\ttabindex=\"0\">\n\t\t\t<ng-template *ngIf=\"customTrigger; else defaultIcon\" [ngTemplateOutlet]=\"customTrigger\"></ng-template>\n\t\t</div>\n\t\t<ng-template #options>\n\t\t\t<ng-content></ng-content>\n\t\t</ng-template>\n\t\t<ng-template #defaultIcon>\n\t\t\t<svg icon ibmIconOverflowMenuVertical16 class=\"bx--overflow-menu__icon\"></svg>\n\t\t</ng-template>\n\t`,\n\tstyles: [`\n\t\t.bx--overflow-menu--open {\n\t\t\topacity: 1\n\t\t}\n\n\t\t/*\n\t\tRotate the overflow menu container as well as the icon, since\n\t\twe calculate our menu position based on the container, not the icon.\n\t\t*/\n\t\t.bx--data-table-v2 .bx--overflow-menu {\n\t\t\ttransform: rotate(90deg);\n\t\t}\n\n\t\t.bx--data-table-v2 .bx--overflow-menu__icon {\n\t\t\ttransform: rotate(180deg);\n\t\t}\n\t`],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class OverflowMenu {\n\t@Input() buttonLabel = this.i18n.get().OVERFLOW_MENU.OVERFLOW;\n\n\t@Input() flip = false;\n\n\t@Input() placement: \"bottom\" | \"top\" = \"bottom\";\n\n\t/**\n\t * This specifies any vertical and horizontal offset for the position of the dialog\n\t */\n\t@Input() offset: { x: number, y: number };\n\n\t@Input() wrapperClass = \"\";\n\n\t/**\n\t * Sets the custom overflow menu trigger\n\t */\n\t@Input() customTrigger: TemplateRef<any>;\n\n\t@ContentChild(OverflowMenuDirective) overflowMenuDirective: OverflowMenuDirective;\n\n\topen = false;\n\n\tconstructor(protected elementRef: ElementRef, protected i18n: I18n) {}\n}\n"]}
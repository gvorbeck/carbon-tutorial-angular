{"version":3,"file":"ellipsis-tooltip.directive.js","sourceRoot":"","sources":["../../src/dialog/tooltip/ellipsis-tooltip.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EACN,SAAS,EAOT,YAAY,EACZ,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAIpD;;;;;;;;;;GAUG;AACH;IAMqC,mCAAgB;IANrD;;IAwCA,CAAC;IAjCA;;;;OAIG;IACH,8CAAoB,GAApB;QACC,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,EAAE;YAC3F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO;SACP;QAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC;IACrE,CAAC;IAGD,iCAAO,GADP;QAEC,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC5B;IACF,CAAC;IAGD,iCAAO,GADP;QAEC,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,OAAO,KAAK,YAAY,EAAE;YAC9D,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC5B;IACF,CAAC;IAGD,iCAAO,GADP;QAEC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC7B,CAAC;;gBAvCD,SAAS,SAAC;oBACV,QAAQ,EAAE,sBAAsB;oBAChC,SAAS,EAAE;wBACV,aAAa;qBACb;iBACD;;;0BAiBC,YAAY,SAAC,OAAO;0BAOpB,YAAY,SAAC,YAAY;0BAOzB,YAAY,SAAC,OAAO;;IAItB,sBAAC;CAAA,AAxCD,CAMqC,gBAAgB,GAkCpD;SAlCY,eAAe","sourcesContent":["import {\n\tDirective,\n\tInput,\n\tTemplateRef,\n\tElementRef,\n\tInjector,\n\tComponentFactoryResolver,\n\tViewContainerRef,\n\tHostListener\n} from \"@angular/core\";\nimport { TooltipDirective } from \"./tooltip.directive\";\nimport { DialogService } from \"./../dialog.service\";\nimport { Tooltip } from \"./tooltip.component\";\n\n\n/**\n * A directive that creates a tooltip `Dialog` for exposing truncated text.\n *\n * class: EllipsisTooltip (extends PopoverDirective)\n *\n * selector: `nEllipsisTooltip`\n *\n * ```html\n * <div class=\"ellipsis\" nEllipsisTooltip>Tooltip for ellipsis because I can and I am really really long</div>\n * ```\n */\n@Directive({\n\tselector: \"[ibmEllipsisTooltip]\",\n\tproviders: [\n\t\tDialogService\n\t]\n})\nexport class EllipsisTooltip extends TooltipDirective {\n\t/**\n\t * Toggles tooltip in view if text is truncated.\n\t * @returns null\n\t * @memberof EllipsisTooltip\n\t */\n\tupdateTooltipContent() {\n\t\tif (this.elementRef.nativeElement.scrollWidth <= this.elementRef.nativeElement.offsetWidth) {\n\t\t\tthis.disabled = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.disabled = false;\n\t\tthis.dialogConfig.content = this.elementRef.nativeElement.innerText;\n\t}\n\n\t@HostListener(\"click\")\n\tonClick() {\n\t\tif (this.trigger === \"click\") {\n\t\t\tthis.updateTooltipContent();\n\t\t}\n\t}\n\n\t@HostListener(\"mouseenter\")\n\tonHover() {\n\t\tif (this.trigger === \"hover\" || this.trigger === \"mouseenter\") {\n\t\t\tthis.updateTooltipContent();\n\t\t}\n\t}\n\n\t@HostListener(\"focus\")\n\tonFocus() {\n\t\tthis.updateTooltipContent();\n\t}\n}\n"]}